<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <bean name="findClinicaByConvenioQuery" class="java.lang.String">

        <constructor-arg>
            <value>
                SELECT DISTINCT
                C.ID,
                C.NOME NOME_CLINICA,
                CONCAT(C.DDD , ' ' , C.TELEFONE) AS TELEFONE,
                CONCAT(P.DDD , ' ' , P.CELULAR) AS CELULAR,
                P.ID_LOGIN ID_PROFISSIONAL,
                P.NOME NOME_PROFISSIONAL,
                P.NUMERO_REGISTRO,
                ESP.NOME NOME_ESPECIALIDADE,
                CONCAT(E.LOGRADOURO , ', ' , E.NUMERO , ' - ' , E.BAIRRO) AS ENDERECO,
                E.LATITUDE,
                E.LONGITUDE,
                PF.ID ID_PROFISSAO,
                PF.NOME AS NOME_PROFISSAO,
                PO.ID_PARCEIRO,
                PC.ACEITA_PARTICULAR,
                AH.ID IS NOT NULL TEM_AGENDA,
                1 AS ACEITA_PLANO,
                L.FOTO
                FROM CLINICA C
                JOIN PROFISSIONAL_CLINICA PC ON PC.ID_CLINICA = C.ID
                JOIN PROFISSIONAL P ON P.ID_LOGIN = PC.ID_PROFISSIONAL
                JOIN LOGIN L ON L.ID = P.ID_LOGIN
                JOIN PROFISSIONAL_ESPECIALIDADE PE ON PE.ID_PROFISSIONAL = P.ID_LOGIN
                JOIN ENDERECO E ON E.ID = C.ID_ENDERECO
                JOIN ESPECIALIDADE ESP ON ESP.ID = PE.ID_ESPECIALIDADE
                JOIN PROFISSAO PF ON PF.ID = ESP.ID_PROFISSAO
                JOIN CLINICA_CONVENIO_CATEGORIA CCC ON CCC.ID_CLINICA = C.ID
                LEFT JOIN PROFISSIONAL_ORIGEM PO ON PO.ID_PROFISSIONAL = P.ID_LOGIN AND PO.ID_CLINICA = C.ID
                LEFT JOIN AGENDA A ON A.ID_CLINICA = PC.ID_CLINICA
                LEFT JOIN AGENDA_HORARIO AH ON AH.ID_AGENDA = A.ID
                WHERE E.LATITUDE &lt; :maxLatitude and E.LATITUDE &gt; :minLatitude
                AND E.LONGITUDE &lt; :maxLongitude and E.LONGITUDE &gt; :minLongitude
                AND PE.ID_ESPECIALIDADE = :idEspecialidade
                AND CCC.ID_CATEGORIA = :idConvenio
                AND (AH.ID IS NOT NULL OR C.TELEFONE IS NOT NULL OR P.CELULAR IS NOT NULL )
            </value>
        </constructor-arg>

    </bean>

    <bean name="findClinicaQuery" class="java.lang.String">

        <constructor-arg>
            <value>
                SELECT DISTINCT
                C.ID,
                C.NOME NOME_CLINICA,
                CONCAT(C.DDD , ' ' , C.TELEFONE) AS TELEFONE,
                CONCAT(P.DDD , ' ' , P.CELULAR) AS CELULAR,
                P.ID_LOGIN ID_PROFISSIONAL,
                P.NOME NOME_PROFISSIONAL,
                P.NUMERO_REGISTRO,
                ESP.NOME NOME_ESPECIALIDADE,
                CONCAT(E.LOGRADOURO , ', ' , E.NUMERO , ' - ' , E.BAIRRO) AS ENDERECO,
                E.LATITUDE,
                E.LONGITUDE,
                PF.ID ID_PROFISSAO,
                PF.NOME AS NOME_PROFISSAO,
                PO.ID_PARCEIRO,
                PC.ACEITA_PARTICULAR,
                AH.ID IS NOT NULL TEM_AGENDA,
                0 AS ACEITA_PLANO,
                L.FOTO
                FROM CLINICA C
                JOIN PROFISSIONAL_CLINICA PC ON PC.ID_CLINICA = C.ID
                JOIN PROFISSIONAL P ON P.ID_LOGIN = PC.ID_PROFISSIONAL
                JOIN LOGIN L ON L.ID = P.ID_LOGIN
                JOIN PROFISSIONAL_ESPECIALIDADE PE ON PE.ID_PROFISSIONAL = P.ID_LOGIN
                JOIN ENDERECO E ON E.ID = C.ID_ENDERECO
                JOIN ESPECIALIDADE ESP ON ESP.ID = PE.ID_ESPECIALIDADE
                JOIN PROFISSAO PF ON PF.ID = ESP.ID_PROFISSAO
                LEFT JOIN PROFISSIONAL_ORIGEM PO ON PO.ID_PROFISSIONAL = P.ID_LOGIN  AND PO.ID_CLINICA = C.ID
                LEFT JOIN AGENDA A ON A.ID_CLINICA = PC.ID_CLINICA
                LEFT JOIN AGENDA_HORARIO AH ON AH.ID_AGENDA = A.ID
                WHERE E.LATITUDE &lt; :maxLatitude and E.LATITUDE &gt; :minLatitude
                AND E.LONGITUDE &lt; :maxLongitude and E.LONGITUDE &gt; :minLongitude
                AND PE.ID_ESPECIALIDADE = :idEspecialidade
                AND PC.ACEITA_PARTICULAR = :aceitaParticular
                AND (AH.ID IS NOT NULL OR C.TELEFONE IS NOT NULL OR P.CELULAR IS NOT NULL )
            </value>
        </constructor-arg>

    </bean>

</beans>

